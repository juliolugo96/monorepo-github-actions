name: Docker Build for Changed Microservices

on:
  push:
    paths:
      - 'app/**'

jobs:
  detect:
    name: Detect Changed Services
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine Changed Services
        id: get-matrix
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          echo "Detecting changes..."
          CHANGED_FOLDERS=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} app | awk -F/ '!($2 ~ /^(Dockerfile|SomeFileYouDoNotWantToDetect|Makefile)$/) {print $2}' | sort -u | xargs)
          echo "Changed folders: $CHANGED_FOLDERS"

          matrix="{\"include\": ["
          first=1
          for service in $CHANGED_FOLDERS; do
            if [ -f "app/${service}/Dockerfile" ]; then
              if [ $first -eq 0 ]; then
                matrix+=","
              fi
              matrix+="{\"service\": \"${service}\"}"
              first=0
            fi
          done
          matrix+="]}"
          
          echo "Matrix for build job: $matrix"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

      - name: Validate Matrix
        if: ${{ fromJson(steps.get-matrix.outputs.matrix).include[0] == null }}
        run: |
          echo "Output from previous step:"
          echo "${{ fromJson(steps.get-matrix.outputs.matrix).include.length }}"
          echo "${{ steps.get-matrix.outputs.matrix }}"
          echo "No services with a Dockerfile were changed. Exiting gracefully."
          exit 0

  build:
    name: Build & Push Docker Images
    needs: detect
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.detect.outputs.matrix).include[0] != null }}
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: juliolugo96 # Change to your Github username
          password: ${{ github.token }}

      - name: Build and Push Docker Image for ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: ./app/${{ matrix.service }}
          file: ./app/${{ matrix.service }}/Dockerfile
          push: true
          tags: ghcr.io/juliolugo96/${{ matrix.service }}:${{ github.sha }},ghcr.io/juliolugo96/${{ matrix.service }}:latest

      # - name: Trigger ArgoCD Deployment for ${{ matrix.service }}
      #   env:
      #     ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
      #     ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      #   run: |
      #     curl -H "Authorization: Bearer ${ARGOCD_TOKEN}"           -X POST "https://${ARGOCD_SERVER}/api/v1/applications/your-argocd-app-${{ matrix.service }}/sync"
